#! /bin/sh

set -e

NPM_REPOSITORY_URL=''
REPOSITORY=''
DIRNAME=$1

export CURRENT_DIR=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")

. "$CURRENT_DIR/color"
. "$CURRENT_DIR/util"

usage() {
	cat <<__EOF__
`clr_bold "Usage:"`
    gitClone `clr_cyan "<packageName>"` `clr_cyan "<dirName>"`

`clr_bold "Example:"`

    gitClone express                 `clr_bright "clone express repository"`
    gitClone express newDirname      `clr_bright "clone express repository and rename newDirname"`

Try 'gitClone help' for details

__EOF__
}

check git "you need install git first"
check node "you need install node first"
check npm "you need install npm first"

down() {
	NPM_REPOSITORY_URL=$1

	if [[ ! -z `isRepUrl $NPM_REPOSITORY_URL` ]]; then
		echo "is a rep url"
		REPOSITORY=$NPM_REPOSITORY_URL
		DIRNAME=`getRepName $REPOSITORY`
	else
		echo "is not a rep url, starting search npm package..."
		NPM_REPOSITORY_URL=`npm v $1 repository.url 2> /dev/null`
		REPOSITORY=`replaceUrl $NPM_REPOSITORY_URL`
	fi

	echo "`clr_cyan $1`'s repository url is `clr_green $REPOSITORY`"
	echo "`clr_bold 'starting to download...'`"
	echo "dirname is ` clr_green $DIRNAME`"

	if [[ ! -z $2 ]]; then
		DIRNAME=$2
	fi


	git clone --recursive $REPOSITORY $DIRNAME
}

finish() {
	echo $1
	if [ $1 -eq 0 ]; then
		clr_green "clone success"
	else
		clr_red "clone fail!!!!!"
	fi
}

main() {
	if [[ $# < 1 ]]; then
		usage
		exit 1
	fi

	set +e

	down $@
	finish $?
}

main "$@"